generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
 }

model Product {
  id          String  @id @default(cuid()) @map("_id")
  slug        String  @unique
  title       String
  mainImage   String? // Main image URL
  price       Int     @default(0)
  rating      Int     @default(0)
  description String
  manufacturer String
  inStock     Int     @default(1)
  categoryId  String
  category    Category @relation(fields: [categoryId], references: [id])
  customerOrders customer_order_product[]
  Wishlist    Wishlist[]
  images      Image[]  @relation("ProductImages") // Relation to multiple images
}

model Image {
  id        String   @id @default(cuid()) @map("_id")
  url       String
  productId String
  product   Product  @relation("ProductImages", fields: [productId], references: [id])
}


model User {
  id       String   @id @default(cuid()) @map("_id")
  email    String @unique
  password String?
  role     String? @default("user")
  Wishlist Wishlist[]
}

model Customer_order {
  id         String   @id @default(cuid()) @map("_id")
  name        String
  lastname    String
  phone       String
  email       String
  company     String
  adress      String
  apartment   String
  postalCode  String
  dateTime    DateTime?                @default(now())
  status      String
  city        String
  country     String
  orderNotice String?
  total       Int
  products    customer_order_product[]
}

model customer_order_product {
  id              String   @id @default(cuid()) @map("_id")
  customerOrder   Customer_order @relation(fields: [customerOrderId], references: [id])
  customerOrderId String
  product         Product        @relation(fields: [productId], references: [id])
  productId       String
  quantity        Int
}

model Category {
  id       String   @id @default(cuid()) @map("_id")
  name     String   @unique
  slug     String?  @unique
  products Product[] // Define a one-to-many relationship
}


model Wishlist {
  id        String   @id @default(cuid()) @map("_id")
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
}
